plugins {
    id 'application'
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
    id 'checkstyle'
}

repositories {
    mavenCentral()
}

group = 'com.example'
version = '1.0.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

mainClassName = 'com.example.bank.BankApplication'

checkstyle {
    toolVersion '10.3.1'
    configFile file("checkstyle_rules.xml")
}

sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration/java"
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.0.4'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-jxc:4.0.2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.0.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.4'
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

task unitTest(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
}

test {
    finalizedBy unitTest
    finalizedBy integrationTest
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn unitTest, integrationTest
    // https://stackoverflow.com/questions/50932619/gradle-jacoco-with-integrationtest-and-exclusions
    // без этой строчки jacoco берет coverage только из test (без integrationTest)
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    reports {
        html.required.set(true)
    }
}
